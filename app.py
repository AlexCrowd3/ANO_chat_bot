import logging
import datetime
import requests
import telebot
from telebot import types
from flask import Flask
app_flask = Flask(__name__)

@app_flask.route('/')
def dummy_endpoint():
    return "Bot is running"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ API —Å–µ—Ä–≤–∏—Å–∞
API_URL = "https://alexcrowd3-anochat-f80f.twc1.net/add_user"
TIMEOUT = 5
REVIEW_CHAT_ID = "@an0app"  # ID —á–∞—Ç–∞, –∫—É–¥–∞ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –æ—Ç–∑—ã–≤—ã (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID)

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
bot = telebot.TeleBot("7670677747:AAHpH1LEaYmXFZyctfCvxJAs00eX7rvf9d0")

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

def send_user_data(user_data):
    try:
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ: {user_data}")
        headers = {'Content-Type': 'application/json'}
        response = requests.post(
            API_URL,
            json=user_data,
            headers=headers,
            timeout=TIMEOUT
        )
        if response.status_code != 200:
            logger.error(f"–û—à–∏–±–∫–∞ {response.status_code}: {response.text}")
        else:
            logger.info("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã")
    except requests.exceptions.RequestException as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}")

@bot.message_handler(commands=['start'])
def start(message):
    user = message.from_user
    chat_id = message.chat.id
    date = datetime.datetime.now().strftime("%Y-%m-%d")
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    user_data = {
        "name": user.first_name,
        "last_name": user.last_name if user.last_name else "–ù–µ —É–∫–∞–∑–∞–Ω–æ",
        "telegram_id": user.id,
        "chat_id": chat_id,
        "date_of_registration": date
    }
    
    send_user_data(user_data)

    # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —ç–º–æ–¥–∑–∏
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(types.KeyboardButton("/game"))
    keyboard.add(types.KeyboardButton("/about"))
    keyboard.add(types.KeyboardButton("/review"))
    keyboard.add(types.KeyboardButton("/buy_n_coin"))
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ + —Ç–µ–∫—Å—Ç + –∫–Ω–æ–ø–∫–∏
    with open('img/welcome.png', 'rb') as photo:
        bot.send_photo(
            chat_id,
            photo=open('img/welcome.png', 'rb'),
            caption="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ANO! üéâ\n–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–≥! üëã\n–†–∞–¥ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è –∑–¥–µ—Å—å. –Ø ‚Äî —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –æ—Ç ANO, –∏ –º–æ—è –∑–∞–¥–∞—á–∞ —Å–¥–µ–ª–∞—Ç—å —Ç–∞–∫, —á—Ç–æ–±—ã —Ç—ã —É–∑–Ω–∞–ª —Å–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π –∏ –∫–æ–ª–ª–µ–≥ —Å–æ–≤—Å–µ–º —Å –¥—Ä—É–≥–æ–π —Å—Ç–æ—Ä–æ–Ω—ã. –í–º–µ—Å—Ç–µ –º—ã —Ä–∞—Å–∫—Ä–æ–µ–º —Å–µ–∫—Ä–µ—Ç—ã –æ–±—â–µ–Ω–∏—è, –ø–æ–¥–Ω–∏–º–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ —Å–ø–ª–æ—Ç–∏–º –∫–æ–ª–ª–µ–∫—Ç–∏–≤. –ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å?\n–î–∞–≤–∞–π —Å–¥–µ–ª–∞–µ–º –≤–∞—à—É –∫–æ–º–∞–Ω–¥—É –µ—â—ë –±–ª–∏–∂–µ –∏ –¥—Ä—É–∂–Ω–µ–µ! üòä",
            reply_markup=keyboard
        )

@bot.message_handler(commands=['game'])
def show_menu(message):
    user_id = message.from_user.id
    url = f"https://alexcrowd3-anochat-f80f.twc1.net?main_id={user_id}"
    
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", url=url))
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ + —Ç–µ–∫—Å—Ç + –∫–Ω–æ–ø–∫–∏
    with open('img/welcome.png', 'rb') as photo:
        bot.send_photo(
            message.chat_id,
            photo=open('img/—ã–µ—Ñ–∫–µ_–ø—Ñ—å—É.png', 'rb'),
            caption="–ü—Ä–∏–≤–µ—Ç, –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É –∏ –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤—Ä–µ–º—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É '–°—Ç–∞—Ä—Ç'üéÆ",
            reply_markup=markup
        )

@bot.message_handler(commands=['about'])
def show_about(message):
    text = "‚ÑπÔ∏è –û –Ω–∞—Å:\nANO ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –≥–¥–µ –∑–Ω–∞–∫–æ–º—ã–µ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –±–ª–∏–∂–µ, –∞ –æ–±—â–µ–Ω–∏–µ ‚Äî —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º. üåü\n–í—Å—ë –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∏–≥—Ä—ã: —É—á–∞—Å—Ç–Ω–∏–∫–∏ –∑–∞–¥–∞—é—Ç –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –≤—ã–±–∏—Ä–∞—é—Ç –∏—Ö –∏–∑ –≥–æ—Ç–æ–≤—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ê –∑–∞—Ç–µ–º –æ—Ç–≤–µ—á–∞—é—Ç –Ω–∞ –Ω–∏—Ö –∞–Ω–æ–Ω–∏–º–Ω–æ, —Ä–∞—Å–∫—Ä—ã–≤–∞—è —á—Ç–æ-—Ç–æ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ, –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –∏–ª–∏ –¥–∞–∂–µ –∑–∞–±–∞–≤–Ω–æ–µ –æ —Å–µ–±–µ. –≠—Ç–æ –∫–∞–∫ —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—É–±, –≥–¥–µ –∫–∞–∂–¥—ã–π –º–æ–∂–µ—Ç –±—ã—Ç—å —á–µ—Å—Ç–Ω—ã–º, –Ω–µ –±–æ—è—Å—å –æ—Å—É–∂–¥–µ–Ω–∏—è. \n–° ANO –≤—ã —É–∑–Ω–∞–µ—Ç–µ –¥—Ä—É–∑–µ–π –∏ –∫–æ–ª–ª–µ–≥ —Å–æ–≤—Å–µ–º —Å –¥—Ä—É–≥–æ–π —Å—Ç–æ—Ä–æ–Ω—ã ‚Äî –∏—Å–∫—Ä–µ–Ω–Ω–µ, –∂–∏–≤–æ –∏ —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º! üí¨‚ú®"
    bot.send_message(message.chat.id, text)

@bot.message_handler(commands=['contacts'])
def show_contacts(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("–ù–∞—à Telegram –∫–∞–Ω–∞–ª", url="https://t.me/an0app"))
    text = "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º –∏–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —Ä–µ–∫–ª–∞–º–µ, –¥–æ—Ä–∞–±–æ—Ç–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\n–ü–∏—à–∏—Ç–µ –Ω–∞–º, –∫–æ–Ω—Ç–∞–∫—Ç—ã —É–∫–∞–∑–∞–Ω—ã –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ))\n–ï—Å–ª–∏ –∫–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤, —Ç–æ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /rewiev"
    bot.send_message(message.chat.id, text)

@bot.message_handler(commands=['review'])
def review_start(message):
    chat_id = message.chat.id
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ "–î–∞" –∏ "–ù–∞–∑–∞–¥"
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("–î–∞ ‚úÖ"), types.KeyboardButton("–ù–∞–∑–∞–¥ üîô"))
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–æ–ø—Ä–æ—Å–æ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏
    bot.send_message(chat_id, "–í—ã —Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤? ‚úçÔ∏è", reply_markup=markup)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_states[chat_id] = "awaiting_review_choice"

@bot.message_handler(func=lambda message: message.text in ["–î–∞ ‚úÖ", "–ù–∞–∑–∞–¥ üîô"])
def handle_review_choice(message):
    chat_id = message.chat.id
    user_state = user_states.get(chat_id)
    
    if user_state == "awaiting_review_choice":
        if message.text == "–î–∞ ‚úÖ":
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –∑–∞–ø—Ä–æ—Å—É –æ—Ç–∑—ã–≤–∞
            bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–∑—ã–≤ –Ω–∏–∂–µ üëá")
            user_states[chat_id] = "awaiting_review_text"
        elif message.text == "–ù–∞–∑–∞–¥ üîô":
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
            keyboard.add(types.KeyboardButton("/game"))
            keyboard.add(types.KeyboardButton("/about"))
            keyboard.add(types.KeyboardButton("/review"))
            bot.send_message(chat_id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –ù–∞ —ç–∫—Ä–∞–Ω —Å –∏–≥—Ä–æ–π", reply_markup=keyboard)
            del user_states[chat_id]
            show_menu(message)

@bot.message_handler(func=lambda message: user_states.get(message.chat.id) == "awaiting_review_text")
def handle_review_text(message):
    chat_id = message.chat.id
    review_text = message.text
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–∑—ã–≤ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —á–∞—Ç
    try:
        bot.send_message(REVIEW_CHAT_ID, f"üìù –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.first_name} {message.from_user.last_name}:\n\n{review_text}")
        bot.send_message(chat_id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! ‚ù§Ô∏è")
    except Exception as e:
        bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–∑—ã–≤–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –æ—Ç–∑—ã–≤–∞: {e}")
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–µ–Ω—é
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(types.KeyboardButton("/menu"))
    keyboard.add(types.KeyboardButton("/about"))
    keyboard.add(types.KeyboardButton("/review"))
    bot.send_message(chat_id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=keyboard)
    del user_states[chat_id]
    show_menu(message)

if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    import threading
    threading.Thread(target=bot.polling, kwargs=dict(none_stop=True)).start()
    
    # –ó–∞–ø—É—Å–∫ Flask –Ω–∞ –ø–æ—Ä—Ç—É 8080
    app_flask.run(host='0.0.0.0', port=8080)